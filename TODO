First MileStone:
  ✔ be able to draw a rectangles, and undo/redo @created(06-06-2021 13:13) @done(06-06-2021 13:14)
    reason: handle ui stuff in somewhat sensible manner and proper undo / redo is very helpfull down the line
  ✔ be able to start and pause a timer @created(06-06-2021 13:13) @done(06-06-2021 14:04)
      reason: more ui interaction
  ✔ be able to control a rectange as 'player' character @created(07-06-2021 19:35) @done(07-06-2021 23:24)
    reason: flesh out ui event system and difference between ui components and game entities
  ✔ play a sound on button click @created(08-06-2021 18:17) @done(08-06-2021 18:17)
    reason: sound is part of a game after all
  ✘ be able to save rectangle and time elapsed to disk @created(06-06-2021 13:13) @cancelled(08-06-2021 19:00)
      reason: handle 'game' state in a smart way, i.e. do NOT save the ui components directly obviously
  ✘ be able to load from disk rectangle and time elapsed @created(06-06-2021 13:13) @cancelled(08-06-2021 19:00)
      reason: what's the point of saving it one can't load
  ✘ be able to continue timer once loaded @created(06-06-2021 13:13) @cancelled(08-06-2021 19:00)
      reason: proof of concept complete

  ✔ closing notes @created(08-06-2021 19:01) @done(08-06-2021 19:04)
      last 3 items are cancelled because current architecture is not fleshed out yet. 
      So in other words doing this prematurely would most likely hamper things down the road. 
      quick retrospective
      keep doing: small incremental changes
      stop doing: trying to fit everything into a single, unified api for no reason other than fabled 'consistency'
      what went well: event system is pretty nice so far and I look forward to using it
      what went less well: need to keep an eye on my own health and learn to enjoy the process

    TODO: 
      ✔ figure out entity collision @created(09-06-2021 20:23) @done(11-06-2021 16:02)
      ☐ implement containsPoint polygon @created(06-06-2021 18:09)
      ☐ implement scale polygon @created(06-06-2021 18:09)
      ☐ proper click & double click mouse events @created(06-06-2021 14:21)
      ☐ investigate DI and project organisation @created(06-06-2021 13:17)

Second MileStone (ideas):
  ☐ snake game @created(07-06-2021 19:41)
    reason: simple yet effective proving grounds of capbilities. Would probably want to include 
    sound since that's important and I've got no experience with it so far. Could also opt to use 
    external assets for visuals as well. 
    
    TODO:
      ✔ create new branch and clear out old stuff @created(12-06-2021 10:45) @done(20-06-2021 14:08)
      ✔ create splashscreen and menu @created(12-06-2021 10:46) @done(20-06-2021 14:08)
      ✔ find sound effects for game over, menu clicks, snake movement, snake consume food, snake slippery? @created(12-06-2021 10:46) @done(20-06-2021 14:08)
      ✔ create easing snake movement @created(12-06-2021 10:54) @done(20-06-2021 14:08)
      ✔ create snake controls @created(12-06-2021 10:56) @done(20-06-2021 14:08)
      ✔ create growing snake on food consumption @created(12-06-2021 10:56) @done(20-06-2021 14:08)
      ✔ create spawn food particles @created(12-06-2021 10:57) @done(20-06-2021 14:08)

      ✔ game over state @created(20-06-2021 14:08) @done(21-06-2021 19:43)
        ✔ create snake head collision with own body is game over @created(12-06-2021 10:56) @done(20-06-2021 16:01)
          see if adjusting the segment size to be smaller than the head resolved the issue of colliding with segments when the head
          is parallel to the body due to locomotion
          if that doesn't solve it, guess implement ray collision
        ✔ adjust bounds, i.e. touching bounds in game over @created(12-06-2021 10:56) @done(20-06-2021 16:01)
        ✔ select game over sound @created(20-06-2021 14:14) @done(20-06-2021 16:01)
        ✔ create game over menu screen @created(20-06-2021 14:14) @done(21-06-2021 19:43)
    
      ✔ create poop particles @created(20-06-2021 14:14) @done(22-06-2021 12:51)
        so I think this can be done rather nicely by passing down a 'isDigisting' boolean from head on food consumption, 
        and then render the segment differently. When the segment has no next, an event needs to be emitted.
        q: are poop particles on a timer? a: yes      
      ✔ poop spawn sound effect @created(22-06-2021 12:53) @done(23-06-2021 19:03)
      ✔ adjust poop particle locatation to use tail center!  @created(22-06-2021 16:31) @done(22-06-2021 16:37)
      ✔ particle spawn on grid, and preferable evenly spaced out. Also need some checking of poop particles @created(20-06-2021 14:28) @done(22-06-2021 17:28)
      ✔ start w 3 segment snake at the place as start button  @created(20-06-2021 14:27) @done(22-06-2021 12:50)     
      ✘ spawn 1 food particle to the right ? @created(22-06-2021 12:50) @cancelled(22-06-2021 17:28)
        cancelled because just spawning a bunch at the start anyway
      ✘ would it make more sense if the new segment is added once the food has been digested.. ? @created(22-06-2021 17:29) @cancelled(22-06-2021 18:28)
        cancelled because yeah I suppose it would, made an attempt at it but failed horribly, not worth it 
      ✔ create coherent color scheme @created(22-06-2021 12:51) @done(24-06-2021 22:23)
      ✘ create score system, e.g. particles eaten & time alive? @created(12-06-2021 10:58) @cancelled(24-06-2021 22:23)
        cancelled because poop particles are no longer causing shrinking snake but game over instead
      ✘ create win condition when snake fills entire play area @created(12-06-2021 10:59) @cancelled(24-06-2021 22:23)
        cancelled because poop particle despawn prevents snake from reaching maximum lenght
      ✔ tweak start screen @created(22-06-2021 17:34) @done(24-06-2021 22:24)
      ☐ create self contained builds windows & linux (see about running linux vm in azue to try this out) @created(24-06-2021 22:26)
      ☐ create itchio page @created(24-06-2021 22:27)
      ☐ start game on key enter press when menu / game over screen is showing @created(20-06-2021 16:17)
      ☐ spruce up start menu w controls & credits.. ? @created(24-06-2021 22:27)
      ☐ back button on game over screen @created(24-06-2021 22:28)



Next MileStones / Challenging Ideas:
  ☐ manipulate a custom shader in realtime with ui controls @created(07-06-2021 19:41)
    reason: shaders are the bread and butter of a proper runnning game, technical challenging
    This idea came about while thinking about how to create a brush zoning tool so that could be a good
    first start. Like, scrollwheel changes size, on left click puts the brush down, etc. And this would also
    need to support undo / redo
  ☐ simulate a long running process (thread sleep) and figure out how to not block the ui! @created(12-06-2021 10:39)
    reason: this is going to be an issue sooner or later so may as well get it out of the way. 
  ☐ do another spirograph animation tool @created(20-06-2021 14:11)
    reasons: proper animation of easyings could be fun and usefull and it would neat a lot of ui work, like lists and scroll stuff etc, 
    so that would improve the whole ui side of things. 
  ☐ create frame logging system @created(20-06-2021 17:04)
    reason: technical challenge and long term beneficial. At the moment there's a weird bug in snake game 
    wherein the order of update vs collision in the main loop is causing food consumption to be triggered twice. 
    Not sure why that is and when figuring it out it would be super helpfull the have a way to tell which events
    were fired and handled during a single frame (i.e. main loop) in which order and which were the emitters
    and receivers. 